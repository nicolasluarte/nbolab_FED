geom_line() +
geom_point() +
xlab("Number of days from start") +
ylab("Mean pellets consumed per day") +
theme(text = element_text(size = 20)) +
scale_fill_manual(values=c("#999999", "#E69F00")) +
scale_x_discrete(labels = c("control" = "Control", "experimental" = "Experimental")) +
theme_bw() +
theme(strip.background = element_rect(colour="black",
fill="white"))
plot_intake_mdl %>%
ggplot(aes(
date,
value,
color = protocol,
group = animal
)) +
geom_line() +
geom_point() +
xlab("Number of days from start") +
ylab("Mean pellets consumed per day") +
theme(text = element_text(size = 20)) +
scale_color_manual(values=c("#999999", "#E69F00")) +
theme_bw() +
theme(strip.background = element_rect(colour="black",
fill="white"))
# individual means
animal_intake <- merged_data %>%
group_by(animal, protocol) %>%
summarise(mean_intake = mean(pellets_consumed)) %>%
ungroup()
# group means
group_intake <- animal_intake %>%
group_by(protocol) %>%
summarise(
mean_group_intake = mean(mean_intake)
) %>%
mutate(
err = sd(mean_group_intake) / sqrt(n())
) %>%
ungroup()
# statistical test
intake_mdl_data <- merged_data %>%
mutate(
date = as.numeric(date) - min(as.numeric(date))
)
mdl_intake <- lmer(pellets_consumed ~ protocol*date + (1 | animal),
data = intake_mdl_data)
summary(mdl_intake)
intake_pred <- predict(mdl_intake, type = "response") %>%
as_tibble()
plot_intake_mdl <- bind_cols(intake_mdl_data, intake_pred)
plot_intake_mdl %>%
ggplot(aes(
date,
value,
color = protocol,
group = animal
)) +
geom_line() +
geom_point() +
xlab("Number of days from start") +
ylab("Mean pellets consumed per day") +
theme(text = element_text(size = 20)) +
scale_color_manual(values=c("#999999", "#E69F00")) +
theme_bw() +
theme(strip.background = element_rect(colour="black",
fill="white"))
#plot
group_intake %>%
ggplot(aes(
protocol,
mean_group_intake,
ymin = mean_group_intake - err,
ymax = mean_group_intake + err,
fill = protocol
)) +
geom_col(width = 0.5) +
geom_errorbar(width = 0.3) +
geom_point(
inherit.aes = FALSE,
aes(protocol, mean_intake),
data = animal_intake
) +
xlab("") +
ylab("Mean pellets consumed per day") +
theme(text = element_text(size = 20)) +
scale_fill_manual(values=c("#999999", "#E69F00")) +
scale_x_discrete(labels = c("control" = "Control", "experimental" = "Experimental")) +
theme_bw() +
theme(strip.background = element_rect(colour="black",
fill="white"),
legend.position = "none")
# statistical test
intake_mdl_weight <- merged_weight %>%
mutate(
date = as.numeric(date) - min(as.numeric(date))
)
# statistical test
intake_mdl_weight <- merge_weight %>%
mutate(
date = as.numeric(date) - min(as.numeric(date))
)
mdl_weight <- lmer(weight ~ protocol*date + (1 | animal),
data = intake_mdl_weight)
summary(mdl_weight)
weight_pred <- predict(mdl_weight, type = "response") %>%
as_tibble()
View(weight_pred)
plot_weight_mdl <- bind_cols(weight_mdl_data, weight_pred)
# statistical test
weight_mdl_weight <- merge_weight %>%
mutate(
date = as.numeric(date) - min(as.numeric(date))
)
# statistical test
weight_mdl_weight <- merge_weight %>%
mutate(
date = as.numeric(date) - min(as.numeric(date))
)
mdl_weight <- lmer(weight ~ protocol*date + (1 | animal),
data = intake_mdl_weight)
summary(mdl_weight)
weight_pred <- predict(mdl_weight, type = "response") %>%
as_tibble()
plot_weight_mdl
plot_weight_mdl <- bind_cols(weight_mdl_data, weight_pred)
# statistical test
weight_mdl_data <- merge_weight %>%
mutate(
date = as.numeric(date) - min(as.numeric(date))
)
mdl_weight <- lmer(weight ~ protocol*date + (1 | animal),
data = intake_mdl_weight)
summary(mdl_weight)
weight_pred <- predict(mdl_weight, type = "response") %>%
as_tibble()
plot_weight_mdl <- bind_cols(weight_mdl_data, weight_pred)
View(plot_weight_mdl)
plot_weight_mdl %>%
ggplot(aes(
date,
value,
color = protocol,
group = animal
)) +
geom_line() +
geom_point() +
xlab("Number of days from start") +
ylab("Percent weight difference from baseline") +
theme(text = element_text(size = 20)) +
scale_color_manual(values=c("#999999", "#E69F00")) +
theme_bw() +
theme(strip.background = element_rect(colour="black",
fill="white"))
# individual means
animal_weight <- merge_weight %>%
group_by(animal, protocol) %>%
summarise(mean_weight = mean(perc_diff)) %>%
ungroup()
# group means
group_weight <- animal_weight %>%
group_by(protocol) %>%
summarise(
mean_group_weight = mean(mean_weight)
) %>%
mutate(
err = sd(mean_group_weight) / sqrt(n())
) %>%
ungroup()
# statistical test
weight_mdl_data <- merge_weight %>%
mutate(
date = as.numeric(date) - min(as.numeric(date))
)
mdl_weight <- lmer(weight ~ protocol*date + (1 | animal),
data = intake_mdl_weight)
summary(mdl_weight)
weight_pred <- predict(mdl_weight, type = "response") %>%
as_tibble()
plot_weight_mdl <- bind_cols(weight_mdl_data, weight_pred)
plot_weight_mdl %>%
ggplot(aes(
date,
value,
color = protocol,
group = animal
)) +
geom_line() +
geom_point() +
xlab("Number of days from start") +
ylab("Percent weight difference from baseline") +
theme(text = element_text(size = 20)) +
scale_color_manual(values=c("#999999", "#E69F00")) +
theme_bw() +
theme(strip.background = element_rect(colour="black",
fill="white"))
# plot
group_weight %>%
ggplot(aes(
protocol,
mean_group_weight,
ymin = mean_group_weight - err,
ymax = mean_group_weight + err,
fill = protocol
)) +
geom_col(width = 0.5) +
geom_errorbar(width = 0.3) +
geom_point(
inherit.aes = FALSE,
aes(protocol, mean_weight),
data = animal_weight
) +
xlab("") +
ylab("Mean percent change in weight") +
theme(text = element_text(size = 20)) +
scale_fill_manual(values=c("#999999", "#E69F00")) +
scale_x_discrete(labels = c("control" = "Control", "experimental" = "Experimental")) +
theme_bw() +
theme(strip.background = element_rect(colour="black",
fill="white"),
legend.position = "none")
circadian_intake
View(pellets_consumed)
circadian_intake
# statistical test
mdl_weight <- lmer(pellets_consumed ~ protocol*day_night + (1 | animal),
data = circadian_intake)
summary(mdl_weight)
merged_data
df
circadian_intake_raw <- df %>%
filter(protocol != "baseline") %>%
mutate(
day_night = as.factor(
if_else(isolated_hour >= 12 && isolated_hour <= 23,
"Dark", "Light")
)
)
View(circadian_intake_raw)
circadian_intake_raw <- df %>%
filter(protocol != "baseline") %>%
mutate(
day_night = as.factor(
if_else(isolated_hour >= 12 && isolated_hour <= 23,
"Dark", "Light")
)
) %>%
group_by(animal, protocol, day_night) %>%
summarise(pellets_consumed = n())
circadian_intake_raw <- df %>%
filter(protocol != "baseline") %>%
mutate(
day_night = as.factor(
if_else(isolated_hour >= 12 && isolated_hour <= 23,
"Dark", "Light")
)
) %>%
group_by(animal, protocol, day_night, date) %>%
summarise(pellets_consumed = n())
circadian_intake_raw <- df %>%
filter(protocol != "baseline") %>%
mutate(
day_night = as.factor(
if_else(isolated_hour >= 12 && isolated_hour <= 23,
"Dark", "Light")
)
) %>%
group_by(animal, protocol, day_night, date) %>%
summarise(pellets_consumed = n()) %>%
ungroup()
# statistical test
mdl_weight <- lmer(pellets_consumed ~ protocol*day_night + (1 | animal),
data = circadian_intake_raw)
summary(mdl_weight)
# statistical test
mdl_weight <- lmer(pellets_consumed ~ protocol*day_night+date + (1 | animal),
data = circadian_intake_raw)
summary(mdl_weight)
# statistical test
mdl_weight <- lmer(pellets_consumed ~ protocol*day_night + (1 | animal),
data = circadian_intake_raw)
summary(mdl_weight)
circadian_intake_raw
circadian_intake_raw <- df %>%
filter(protocol != "baseline") %>%
mutate(
day_night = as.factor(
if_else(isolated_hour >= 12 && isolated_hour <= 23,
"Dark", "Light")
)
) %>%
group_by(animal, protocol, day_night, date, isolated_hour) %>%
summarise(pellets_consumed = n()) %>%
ungroup()
circadian_intake_raw
# statistical test
mdl_weight <- lmer(pellets_consumed ~ protocol*isolated_hout + (1 | animal),
data = circadian_intake_raw)
# statistical test
mdl_weight <- lmer(pellets_consumed ~ protocol*isolated_hour + (1 | animal),
data = circadian_intake_raw)
summary(mdl_weight)
# statistical test
mdl_weight <- lmer(pellets_consumed ~ protocol*as.factor(isolated_hour) + (1 | animal),
data = circadian_intake_raw)
summary(mdl_weight)
View(circadian_intake)
# statistical test
mdl_weight <- lmer(pellets_consumed ~ protocol*day_night + (1 | animal),
data = circadian_intake)
summary(mdl_weight)
# statistical test
mdl_circadian <- lmer(pellets_consumed ~ protocol*day_night + (1 | animal),
data = circadian_intake)
summary(mdl_circadian)
circadian_pred <- predict(mdl_circadian, type = "response") %>%
as_tibble()
circadian_pred
plot_circadian_mdl <- bind_cols(circadian_mdl_data, circadian_pred)
plot_circadian_mdl <- bind_cols(circadian_intake, circadian_pred)
plot_circadian_mdl
plot_circadian_mdl %>%
ggplot(aes(
day_night,
value,
color = day_night
)) +
geom_point() +
facet_wrap(~protocol)
emm_circadian <- emmeans::emmeans(mdl_circadian, ~protocol * day_night)
contrast(emm_circadian, interaction = "pairwise")
contrasts(emm_circadian, interaction = "pairwise")
emmeans::contrast(emm_circadian, interaction = "pairwise")
emm_circadian <- emmeans::emmeans(mdl_circadian, ~protocol)
emmeans::contrast(emm_circadian, interaction = "pairwise")
* day_night
emm_circadian <- emmeans::emmeans(mdl_circadian, ~protocol * day_night)
emmeans::contrast(emm_circadian, interaction = "pairwise")
emm_circadian <- emmeans::emmeans(mdl_circadian, ~protocol * day_night)
emmeans::contrast(emm_circadian)
emmeans::pairs(emm_circadian)
emmeans::(emm_circadian)
contrast
emm_circadian <- emmeans::emmeans(mdl_circadian, ~protocol * day_night)
emmeans::contrast(emm_circadian)
plot(emm_circadian)
plot(emm_circadian)
pacman::p_load(
tidyverse,
cowplot,
lme4,
lmerTest,
ggrepel,
ggplot2,
ggprism
)
circadian_emm <- emmeans::contrast(emm_circadian)
circadian_emm
plot(circadian_emm)
plot(circadian_emm) %>%
add_pvalue(circadian_emm)
circadian_emm
circadian_emm <- emmeans::contrast(emm_circadian) %>%
mutate(
y.position = 20
)
circadian_emm
circadian_pval <- circadian_emm %>%
as_tibble()
circadian_pval
circadian_emm
plot(circadian_emm)
emmeans::emmip(mdl_circadian, protocol ~ day_night)
plot(emmeans::emmip(mdl_circadian, protocol ~ day_night))
emmeans::pwpp(emm_circadian)
emmeans::pwpm(emm_circadian)
p
emmeans::pwpp(emm_circadian)
emmeans::pwpp(emm_circadian, method = "trt.vs.ctrl1")
emmeans::pwpp(emm_circadian, method = "trt.vs.ctrl1", type = "response")
# statistical test
mdl_circadian <- lmer(pellets_consumed ~ protocol | day_night + (1 | animal),
data = circadian_intake)
*
# statistical test
mdl_circadian <- lmer(pellets_consumed ~ protocol*day_night + (1 | animal),
data = circadian_intake)
emm_circadian <- emmeans::emmeans(mdl_circadian, ~protocol | day_night)
emmeans::pwpp(emm_circadian)
emm_circadian <- emmeans::emmeans(mdl_circadian, ~day_night | protocol)
emmeans::pwpp(emm_circadian)
emmeans::pwpm(emm_circadian)
p
emmeans::pwpp(emm_circadian)
emmeans::pwpp(emm_circadian) +
theme_bw()
emmeans::pwpp(emm_circadian)
emmeans::pwpp(emm_circadian, type = "response") +
theme_bw()
emmeans::pwpp(emm_circadian, type = "response") +
theme_bw() +
theme(strip.background = element_rect(colour="black",
fill="white"),
legend.position = "none")
emmeans::pwpp(emm_circadian, type = "response") +
theme_bw() +
theme(strip.background = element_rect(colour="black",
fill="white"),
legend.position = "none") +
ylab("Mean intake")
emmeans::pwpp(emm_circadian, type = "response", by = "protocol")
emmeans::pwpp(emm_circadian, type = "response", by = "day_night")
pacman::p_load(
tidyverse,
cowplot,
lme4,
lmerTest,
ggrepel,
ggplot2,
ggprism,
effects
)
effects::allEffects(mdl_circadian)
plot(effects::allEffects(mdl_circadian))
emm_circadian
emm_circadian <- emmeans::emmeans(mdl_circadian, ~protocol * day_night)
emm_circadian <- emmeans::emmeans(mdl_circadian, ~protocol * day_night)
emm_circadian
emmeans::contrast(emm_circadian)
emm_circadian <- emmeans::emmeans(mdl_circadian, pairwise ~ day_night | protocol, adjust = "fdr")$contrasts
emm_circadian
plot(emm_circadian)
emmeans::pwpp(emm_circadian, type = "response") +
theme_bw() +
theme(strip.background = element_rect(colour="black",
fill="white"),
legend.position = "none") +
ylab("Mean intake")
emmeans::pwpp(emm_circadian, type = "response")
emmeans::pwpp(emm_circadian)
plot(emm_circadian)
emm_circadian
emm_circadian <- emmeans::emmeans(mdl_circadian, pairwise ~ day_night * protocol, adjust = "fdr")$contrasts
emm_circadian
plot(emm_circadian)
emmeans::pwpp(emm_circadian)
plot(emmeans::pwpp(emm_circadian))
plot(emm_circadian)
emm_circadian
knitr::kable(emm_circadian)
pacman::p_load(
tidyverse,
cowplot,
lme4,
lmerTest,
ggrepel,
ggplot2,
kableExtra
)
emm_circadian %>%
kable() %>%
kable_styling(full_width = FALSE)
circadian_intake_group <- circadian_intake %>%
group_by(protocol, day_night) %>%
summarise(
mean_intake = mean(pellets_consumed)
) %>%
ungroup() %>%
mutate(
err = sd(mean_intake) / sqrt(n())
)
# statistical test
mdl_circadian <- lmer(pellets_consumed ~ protocol*day_night + (1 | animal),
data = circadian_intake)
summary(mdl_circadian)
circadian_pred <- predict(mdl_circadian, type = "response") %>%
as_tibble()
plot_circadian_mdl <- bind_cols(circadian_intake, circadian_pred)
emm_circadian <- emmeans::emmeans(mdl_circadian, pairwise ~ day_night * protocol, adjust = "fdr")$contrasts
emm_circadian %>%
kable() %>%
kable_styling(full_width = FALSE)
# plot
circadian_intake_group %>%
ggplot(aes(
day_night,
mean_intake,
ymin = mean_intake - err,
ymax = mean_intake + err,
fill = day_night
)) +
geom_col() +
geom_errorbar(width = 0.3) +
geom_point(
inherit.aes = FALSE,
aes(
day_night,
pellets_consumed
),
data = circadian_intake
) +
facet_wrap(~protocol) +
xlab("") +
ylab("Total pellets consumed") +
theme(text = element_text(size = 20)) +
scale_fill_manual(values=c("#999999", "#E69F00")) +
scale_x_discrete(labels = c("control" = "Control", "experimental" = "Experimental")) +
theme_bw() +
theme(strip.background = element_rect(colour="black",
fill="white"),
legend.position = "none")
